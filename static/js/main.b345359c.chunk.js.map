{"version":3,"sources":["assets/images/profile-image.png","components/PortfolioPage/Sections/LinksSection.tsx","components/PortfolioPage/Sections/AboutSection.tsx","components/PortfolioPage/Sections/SkillsSection.tsx","components/PortfolioPage/Sections/ProjectsSection.tsx","components/PortfolioPage/Sections/WorkHistory.tsx","components/PortfolioPage/PortfolioPage.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","LinksSection","className","href","process","AboutSection","src","require","alt","title","SkillsSection","ProjectsSection","WorkHistory","useState","selectedIndex","setSelectedIndex","navigate","increment","newIndex","Math","max","min","positions","length","classNames","undefined","onClick","map","position","i","number","selected","WorkHistoryPosition","props","company","timeframe","location","description","descriptionItem","PortfolioPage","theme","setTheme","usedLocationHash","setUsedLocationHash","contentRef","useRef","iconsRef","sectionsRef","sections","id","label","icon","section","updateMenu","currentContentRef","current","contentHeight","offsetHeight","scrollTopPosition","scrollTop","scrollBottomPosition","isScrolledToBottom","scrollHeight","window","hash","console","log","setSelectedMenuItemByHashLocation","setSelectedMenuItem","setSelectedMenuItemByScrollPosition","throttledScroll","_","useEffect","addEventListener","removeEventListener","index","forEach","classList","remove","add","replace","sectionIndex","findIndex","sectionVisibleHeight","s","sectionHeight","sectionTopPosition","offsetTop","secitonBottomPosition","visibleHeightPercentage","indexOf","debouncedAddEventListener","key","ref","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b345359c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-image.a6b90a10.png\";","import * as React from 'react';\r\nimport { FunctionComponent } from 'react';\r\nimport './LinksSection.scss';\r\nimport { RiLinkedinBoxLine, RiGithubLine, RiFileLine } from 'react-icons/ri';\r\n\r\nexport const LinksSection: FunctionComponent = () => {\r\n    return (\r\n        <div className='LinksSection'>\r\n            <a href='https://www.linkedin.com/in/rutledgelindsey/'>\r\n                <div className='LinksSection-link'>\r\n                    <RiLinkedinBoxLine />\r\n                    <div className='LinksSection-link-label'>LinkedIn</div>\r\n                </div>\r\n            </a>\r\n            <a href='https://github.com/LindseyRutledge/'>\r\n                <div className='LinksSection-link'>\r\n                    <RiGithubLine />\r\n                    <div className='LinksSection-link-label'>GitHub</div>\r\n                </div>\r\n            </a>\r\n            <a href={`${process.env.PUBLIC_URL}/Resume - Lindsey Rutledge - 2021-09.docx`}>\r\n                <div className='LinksSection-link'>\r\n                    <RiFileLine />\r\n                    <div className='LinksSection-link-label'>Resume</div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport { FunctionComponent } from 'react';\r\nimport './AboutSection.scss';\r\nimport { RiShareForwardLine } from 'react-icons/ri';\r\n\r\nexport const AboutSection: FunctionComponent = () => {\r\n    return (\r\n        <div className='AboutSection'>\r\n            <div className='AboutSection-avatar'>\r\n                <img\r\n                    className='AboutSection-avatar-image'\r\n                    src={require('../../../assets/images/profile-image.png')}\r\n                    alt='Avatar'\r\n                    title='Image Credit: ummmmandy.tumblr.com'\r\n                />\r\n                <a\r\n                    className='AboutSection-avatar-redirect'\r\n                    href='https://picrew.me/image_maker/114808'\r\n                    title='Picrew Avatar Creator - by ummmmandy'\r\n                >\r\n                    <RiShareForwardLine />\r\n                </a>\r\n            </div>\r\n            <div className='AboutSection-content'>\r\n                <p>Hi, I'm <em>Lindsey Rutledge</em>!</p>\r\n                <p>I am a Full Stack <em>Web Developer</em> specializing in <em>Front-end</em> web development.</p>\r\n                <p>Currently based in <em>Bellevue, WA</em>.</p>\r\n                <p className='AboutSection-resume'>\r\n                    <a href={`${process.env.PUBLIC_URL}/Resume - Lindsey Rutledge - 2021-09.docx`}>Resume</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import * as React from 'react';\r\nimport { FunctionComponent } from 'react';\r\nimport './SkillsSection.scss';\r\n\r\nexport const SkillsSection: FunctionComponent = () => {\r\n    return (\r\n        <div className='SkillsSection'>\r\n            <div className='SkillsSection-description'>Here are a few technologies I have been using lately:</div>\r\n            <ul className='SkillsSection-list'>\r\n                <li><em>React</em></li>\r\n                <li><em>TypeScript</em></li>\r\n                <li><em>JavaScript (ES6+)</em></li>\r\n                <li><em>SCSS</em>/<em>CSS</em></li>\r\n                <li><em>HTML</em></li>\r\n                <li><em>Java</em></li>\r\n                <li><em>Kotlin</em></li>\r\n                <li><em>Cloud Foundry</em></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport { RiGithubLine, RiLinksLine } from 'react-icons/ri';\r\nimport './ProjectsSection.scss';\r\n\r\nexport const ProjectsSection: React.FunctionComponent = () => {\r\n    return (\r\n        <div className='ProjectsSection'>\r\n            <div className='ProjectsSection-project'>\r\n                <div className='ProjectsSection-title'>\r\n                    <span className='ProjectsSection-links'>\r\n                        <span>Portfolio</span>\r\n                        <a className='ProjectsSection-link' href='https://github.com/LindseyRutledge/portfolio'>\r\n                            <RiGithubLine className='ProjectsSection-linkIcon' />\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n                <div className='ProjectsSection-description'>This project! It is a small sample of my work.</div>\r\n                <div className='ProjectsSection-features'>\r\n                    <div className='ProjectsSection-features-section'>\r\n                        <div>Technologies:</div>\r\n                        <ul>\r\n                            <li><em>React</em></li>\r\n                            <li><em>TypeScript</em></li>\r\n                            <li><em>JavaScript</em></li>\r\n                            <li><em>SCSS</em>/<em>CSS3</em></li>\r\n                            <li><em>Github Pages</em></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='ProjectsSection-features-section'>\r\n                        <div>Features:</div>\r\n                        <ul>\r\n                            <li><em>Responsive Design</em></li>\r\n                            <li><em>Themes</em> - Light/Dark</li>\r\n                            <li><em>Scroll Indicator</em></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='ProjectsSection-project'>\r\n                <div className='ProjectsSection-title'>\r\n                    <span className='ProjectsSection-links'>\r\n                        <span>\r\n                            Bells\r\n                        </span>\r\n                        <span>\r\n                            <a href=\"https://lindseyrutledge.github.io/bells/\">\r\n                                <RiLinksLine className='ProjectsSection-linkIcon' />\r\n                            </a>\r\n                            <a href='https://github.com/LindseyRutledge/bells'>\r\n                                <RiGithubLine className='ProjectsSection-linkIcon' />\r\n                            </a>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                <div className='ProjectsSection-description'>A simple application for \"playing\" hand bells.</div>\r\n                <div className='ProjectsSection-features'>\r\n                    <div className='ProjectsSection-features-section'>\r\n                        <div>Technologies:</div>\r\n                        <ul>\r\n                            <li><em>React</em></li>\r\n                            <li><em>TypeScript</em></li>\r\n                            <li><em>JavaScript</em></li>\r\n                            <li><em>SCSS</em>/<em>CSS3</em></li>\r\n                            <li><em>Github Pages</em></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='ProjectsSection-features-section'>\r\n                        <div>Features:</div>\r\n                        <ul>\r\n                            <li>Lock note and <em>shake device</em> to ring bell (mobile)</li>\r\n                            <li>Press button to play bell sound</li>\r\n                            <li><em>Responsive Design</em></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import * as React from 'react';\r\nimport { FunctionComponent, ReactNode, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport './WorkHistory.scss';\r\nimport { RiArrowLeftSLine, RiArrowRightSLine } from 'react-icons/ri';\r\n\r\nexport const WorkHistory: FunctionComponent = () => {\r\n    const [selectedIndex, setSelectedIndex] = useState<number>(0);\r\n\r\n    const navigate = (increment: number) => {\r\n        let newIndex = selectedIndex + increment;\r\n        newIndex = Math.max(0, newIndex);\r\n        newIndex = Math.min(newIndex, positions.length - 1);\r\n\r\n        setSelectedIndex(newIndex);\r\n    };\r\n\r\n    return (\r\n        <div className='WorkHistory'>\r\n            <div className='WorkHistory-info'>\r\n                Below is some information on some of my latest work experience.\r\n                Please check out my\r\n                <a href='https://www.linkedin.com/in/rutledgelindsey'> LinkedIn </a>\r\n                or\r\n                <a href={`${process.env.PUBLIC_URL}/Resume - Lindsey Rutledge - 2020-08.docx`}> Resume </a>\r\n                for additional experience.\r\n            </div>\r\n            <div className='WorkHistory-content'>\r\n                <div\r\n                    className={classNames(\r\n                        'WorkHistory-navigation',\r\n                        selectedIndex === 0 ? 'end' : undefined\r\n                    )}\r\n                    onClick={() => { navigate(-1) }}\r\n                >\r\n                    <RiArrowLeftSLine />\r\n                </div>\r\n                <div>\r\n                    {positions.map((position: PositionInfo, i, number) => {\r\n                        return <WorkHistoryPosition selected={i === selectedIndex} {...position} />;\r\n                    })}\r\n                </div>\r\n                <div\r\n                    className={classNames(\r\n                        'WorkHistory-navigation',\r\n                        selectedIndex === positions.length - 1 ? 'end' : undefined\r\n                    )}\r\n                    onClick={() => { navigate(1) }}\r\n                >\r\n                   <RiArrowRightSLine />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ninterface PositionInfo {\r\n    title: string;\r\n    company: string;\r\n    timeframe: string;\r\n    location: string;\r\n    description: ReactNode[];\r\n}\r\n\r\ninterface WorkHistoryPositionProps extends PositionInfo {\r\n    selected: boolean;\r\n}\r\n\r\nconst WorkHistoryPosition: FunctionComponent<WorkHistoryPositionProps> = (props: WorkHistoryPositionProps) => {\r\n    return (\r\n        <div className={classNames('WorkHistory-position', props.selected ? 'selected' : undefined)}>\r\n            <div className='WorkHistory-title'>{props.title} - {props.company}</div>\r\n            <div className='WorkHistory-timeframe'>{props.timeframe}</div>\r\n            <div className='WorkHistory-location'>{props.location}</div>\r\n            <ul className='WorkHistory-description'>\r\n                {props.description.map((descriptionItem: ReactNode) => {\r\n                    return <li>{descriptionItem}</li>;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst positions: PositionInfo[] = [\r\n    {\r\n        title: 'Software Developer',\r\n        company: 'The Boeing Company',\r\n        timeframe: 'June 2020 – Present',\r\n        location: 'Bellevue, WA; Virtual',\r\n        description: [\r\n            <><em>Technologies: </em> React, TypeScript, JavaScript, Kotlin, Sass/CSS, Cloud Foundry, GitLab, SQL, etc.</>,\r\n            <>Developed code for a major application used by executives for displaying and utilizing key metrics.</>,\r\n            <>Collaborated with other developers to encourage continuous improvement through use of Pair Programming,\r\n            Test-Driven Development (TDD), and more.</>,\r\n        ]\r\n    },\r\n    {\r\n        title: 'Software Developer',\r\n        company: 'The Boeing Company',\r\n        timeframe: 'July 2018 – June 2020',\r\n        location: 'Bellevue, WA',\r\n        description: [\r\n            <><em>Technologies:</em> React, TypeScript, JavaScript, Kotlin, Java, Sass/CSS, Cloud Foundry, GitLab, SQL, etc.</>,\r\n            <>Developed code for web applications for crucial Boeing initiatives using React, TypeScript, Pivotal Cloud Foundry (PCF),\r\n            Git, Jest, IntelliJ, Sass, etc.</>,\r\n            <>Transformed Boeing development teams by applying key best practices: Extreme Programming (XP), Pair Programming,\r\n            Test-Driven Development (TDD), balanced teams, etc.</>,\r\n            <>Utilized Pair Programming to teach other developers and teams by demonstration through collaboration.</>,\r\n        ]\r\n    },\r\n    {\r\n        title: 'Software Developer',\r\n        company: 'The Boeing Company',\r\n        timeframe: 'June 2014 – July 2018',\r\n        location: 'Seattle, WA',\r\n        description: [\r\n            <><em>Technologies:</em> JavaScript, .NET/C#, MVC, Knockout, Bootstrap, SharePoint, CSS, SQL, SlickGrid, etc.</>,\r\n            <>Developed code for an array of Microsoft stack MVC and MVVM web applications for Boeing’s Test and Evaluation team.</>,\r\n            <>Collaborated with users to refine requirements and polish user interfaces.</>,\r\n            <>Worked with a large team of individuals based both locally and around the world.</>,\r\n            <>Tested applications through unit testing.</>,\r\n        ]\r\n    }\r\n];","import * as React from 'react';\r\nimport { FunctionComponent, useEffect, useRef, ReactNode, useState } from 'react';\r\nimport './PortfolioPage.scss';\r\nimport {\r\n    RiEmotionLine,\r\n    RiLightbulbLine,\r\n    RiBriefcase3Line,\r\n    RiGithubLine,\r\n    RiLinksLine,\r\n    RiMoonLine,\r\n    RiSunLine\r\n} from 'react-icons/ri';\r\nimport * as _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { LinksSection } from './Sections/LinksSection';\r\nimport { AboutSection } from './Sections/AboutSection';\r\nimport { SkillsSection } from './Sections/SkillsSection';\r\nimport { ProjectsSection } from './Sections/ProjectsSection';\r\nimport { WorkHistory } from './Sections/WorkHistory';\r\n\r\nexport interface PortfolioSection {\r\n    id: string;\r\n    label: string;\r\n    icon: ReactNode;\r\n    section: ReactNode;\r\n}\r\n\r\nexport const PortfolioPage: FunctionComponent = () => {\r\n    const [theme, setTheme] = useState<string>('dark-theme');\r\n    const [usedLocationHash, setUsedLocationHash] = useState<boolean>(false);\r\n\r\n    const contentRef = useRef<HTMLDivElement>(null);\r\n    const iconsRef = useRef<HTMLDivElement[]>([]);\r\n    const sectionsRef = useRef<HTMLDivElement[]>([]);\r\n\r\n    const sections: PortfolioSection[] = [\r\n        { id: 'about', label: 'About', icon: <RiEmotionLine />, section: <AboutSection /> },\r\n        { id: 'skills', label: 'Skills', icon: <RiLightbulbLine />, section: <SkillsSection /> },\r\n        { id: 'work-history', label: 'Work History', icon: <RiBriefcase3Line />, section: <WorkHistory /> },\r\n        { id: 'projects', label: 'Projects', icon: <RiGithubLine />, section: <ProjectsSection /> },\r\n        { id: 'links', label: 'Links', icon: <RiLinksLine />, section: <LinksSection /> },\r\n    ];\r\n\r\n    const updateMenu = () => {\r\n        const currentContentRef: HTMLDivElement | null = contentRef.current;\r\n\r\n        if (currentContentRef) {\r\n            const contentHeight: number = currentContentRef.offsetHeight;\r\n            const scrollTopPosition: number = currentContentRef.scrollTop;\r\n            const scrollBottomPosition: number = scrollTopPosition + contentHeight;\r\n            const scrollHeight: number = currentContentRef.scrollHeight;\r\n\r\n            const isScrolledToBottom: boolean = scrollTopPosition + contentHeight === scrollHeight;\r\n\r\n            if (window.location.hash && !usedLocationHash) {\r\n                console.log('hash')\r\n                setSelectedMenuItemByHashLocation();\r\n                setUsedLocationHash(true);\r\n            } else if (isScrolledToBottom) {\r\n                console.log('bottom')\r\n                setSelectedMenuItem(sections.length - 1);\r\n            } else {\r\n                console.log('position')\r\n                setSelectedMenuItemByScrollPosition(scrollTopPosition, scrollBottomPosition);\r\n            }\r\n        }\r\n    };\r\n\r\n    const throttledScroll = _.throttle(updateMenu, 100);\r\n\r\n    const setupScrollEventListener = () => {\r\n        contentRef.current?.addEventListener('scroll', throttledScroll);\r\n\r\n        return () => {\r\n            contentRef.current?.removeEventListener('scroll', throttledScroll);\r\n        };\r\n    };\r\n\r\n    useEffect(updateMenu, []);\r\n\r\n    useEffect(setupScrollEventListener, [usedLocationHash]);\r\n\r\n    const setSelectedMenuItem = (index: number) => {\r\n        sections.forEach((section: PortfolioSection, i: number) => {\r\n            iconsRef.current[i]?.classList.remove('selected');\r\n        });\r\n        iconsRef.current[index]?.classList.add('selected');\r\n    };\r\n\r\n    const setSelectedMenuItemByHashLocation = () => {\r\n        const location = window.location.hash.replace('#', '');\r\n\r\n        const sectionIndex = sections.findIndex((section: PortfolioSection) => {\r\n            return section.id === location\r\n        });\r\n\r\n        setSelectedMenuItem(sectionIndex);\r\n    };\r\n\r\n    const setSelectedMenuItemByScrollPosition = (scrollTopPosition: number, scrollBottomPosition: number) => {\r\n        const currentContentRef: HTMLDivElement | null = contentRef.current;\r\n\r\n        if (currentContentRef) {\r\n            const sectionVisibleHeight: number[] = [];\r\n\r\n            sections.forEach((s: PortfolioSection, i: number) => {\r\n                const section: HTMLDivElement = sectionsRef.current[i];\r\n\r\n                if (section) {\r\n                    const sectionHeight: number = section.offsetHeight;\r\n\r\n                    const sectionTopPosition = section.offsetTop - currentContentRef.offsetTop;\r\n                    const secitonBottomPosition = sectionTopPosition + sectionHeight;\r\n\r\n                    const visibleHeight: number = Math.max(Math.min(scrollBottomPosition, secitonBottomPosition) - Math.max(scrollTopPosition, sectionTopPosition), 0);\r\n                    const visibleHeightPercentage: number = visibleHeight / sectionHeight;\r\n\r\n                    sectionVisibleHeight[i] = visibleHeightPercentage;\r\n                }\r\n            });\r\n\r\n            setSelectedMenuItem(sectionVisibleHeight.indexOf(Math.max(...sectionVisibleHeight)));\r\n        }\r\n    };\r\n\r\n    const debouncedAddEventListener = _.debounce(() => {\r\n        contentRef.current?.addEventListener('scroll', throttledScroll);\r\n    }, 1000);\r\n\r\n    return (\r\n        <div className={classNames('PortfolioPage', theme)}>\r\n            <div className='PortfolioPage-header'>\r\n                <div className='PortfolioPage-title'>\r\n                    <div className='PortfolioPage-name'>Lindsey</div>\r\n                    <div className='PortfolioPage-name'>Rutledge</div>\r\n                    <div\r\n                        className='PortfolioPage-themeToggle'\r\n                        onClick={() => setTheme(theme === 'dark-theme' ? 'light-theme' : 'dark-theme')}\r\n                        title='Change theme'\r\n                    >\r\n                        {theme === 'dark-theme' ? <RiMoonLine /> : <RiSunLine />}\r\n                    </div>\r\n                </div>\r\n                <div className='PortfolioPage-header-icons'>\r\n                    {sections.map((section: PortfolioSection, i: number) => {\r\n                        return (\r\n                            <a\r\n                                key={section.id}\r\n                                href={`#${section.id}`}\r\n                                onClick={() => {\r\n                                    contentRef.current?.removeEventListener('scroll', throttledScroll);\r\n                                    debouncedAddEventListener();\r\n                                    setSelectedMenuItem(i);\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    className='PortfolioPage-header-iconGroup'\r\n                                    ref={icon => icon ? iconsRef.current[i] = icon : undefined}\r\n                                >\r\n                                    <div className={classNames('PortfolioPage-header-icon', `${section.id}-icon`)}>\r\n                                        {section.icon}\r\n                                    </div>\r\n                                    <div className={classNames('PortfolioPage-header-iconLabel', `${section.id}-label`)}>\r\n                                        {section.label}\r\n                                    </div>\r\n                                </div>\r\n                            </a>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className='PortfolioPage-content' ref={contentRef}>\r\n                {sections.map((section: PortfolioSection, i: number) => {\r\n                    return (\r\n                        <div\r\n                            key={section.id}\r\n                            id={section.id}\r\n                            className='PortfolioPage-section'\r\n                            ref={section => section ? sectionsRef.current[i] = section : undefined}\r\n                        >\r\n                            <div className='PortfolioPage-heading'>\r\n                                <span className='PortfolioPage-heading-text'>{section.label}</span>\r\n                            </div>\r\n                            {section.section ? section.section : undefined}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PortfolioPage } from './components/PortfolioPage/PortfolioPage';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/styles/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PortfolioPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}